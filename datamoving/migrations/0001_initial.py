# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-05-23 16:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datasource_name', models.CharField(max_length=30, verbose_name='数据源名称')),
                ('ip', models.CharField(max_length=15, verbose_name='IP地址')),
                ('username', models.CharField(max_length=20, verbose_name='机器用户名')),
                ('password', models.CharField(max_length=50, verbose_name='机器密码')),
                ('db_type', models.CharField(choices=[(0, 'MYSQL'), (1, 'DB2'), (2, 'ORACLE')], max_length=10, verbose_name='数据库类型')),
                ('db_username', models.CharField(max_length=20, verbose_name='数据库用户名')),
                ('db_password', models.CharField(max_length=50, verbose_name='数据库密码')),
                ('file_path', models.CharField(max_length=200, verbose_name='归档路径')),
                ('port', models.CharField(max_length=10, verbose_name='数据库端口')),
                ('server_name', models.CharField(max_length=20, verbose_name='服务名称')),
                ('group_id', models.SmallIntegerField(verbose_name='归属系统')),
            ],
            options={
                'db_table': 'datasource',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='日志内容')),
            ],
            options={
                'db_table': 'log',
            },
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=30, unique=True, verbose_name='规则名称')),
                ('describe', models.CharField(blank=True, max_length=100, null=True, verbose_name='规则描述')),
                ('belong_sys', models.SmallIntegerField(blank=True, null=True, verbose_name='归属系统')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='规则创建时间')),
                ('create_user', models.CharField(max_length=10, verbose_name='创建人')),
                ('table_info', models.TextField(verbose_name='表信息')),
                ('rule_template', models.CharField(max_length=100, verbose_name='规则模板(存储过程?)')),
                ('use_csr', models.CharField(default='0', max_length=20, verbose_name='使用临时表')),
                ('extend1', models.CharField(blank=True, max_length=255, null=True, verbose_name='备用字段1')),
                ('extend2', models.CharField(blank=True, max_length=255, null=True, verbose_name='备用字段2')),
                ('extend3', models.CharField(blank=True, max_length=255, null=True, verbose_name='备用字段3')),
            ],
            options={
                'db_table': 'regulation',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=30, unique=True, verbose_name='任务名称')),
                ('describe', models.CharField(blank=True, max_length=100, null=True, verbose_name='任务描述')),
                ('run_way', models.SmallIntegerField(choices=[(0, '手动'), (1, '定时')], verbose_name='执行方式')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('total_time', models.IntegerField(blank=True, null=True, verbose_name='耗时')),
                ('status', models.SmallIntegerField(choices=[(0, '未开始'), (1, '执行中'), (2, '执行失败'), (3, '执行成功')], verbose_name='任务状态')),
                ('time_rule', models.CharField(blank=True, max_length=255, null=True, verbose_name='定时规则')),
                ('estimate_count', models.CharField(blank=True, max_length=200, null=True, verbose_name='预估量')),
                ('actual_count', models.CharField(blank=True, max_length=200, null=True, verbose_name='实际量')),
                ('commit_count', models.CharField(max_length=20, verbose_name='提交条数')),
                ('source_id', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='数据源id')),
                ('target_id', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='目标源id')),
                ('rollback_condition', models.CharField(blank=True, max_length=100, null=True, verbose_name='回灌条件')),
                ('task_type', models.SmallIntegerField(choices=[(0, '迁移'), (1, '回灌')], verbose_name='任务类型')),
                ('final_time', models.DateTimeField(blank=True, null=True, verbose_name='定时结束时间')),
                ('step', models.IntegerField(blank=True, null=True, verbose_name='执行阶段')),
                ('run_step', models.IntegerField(blank=True, null=True, verbose_name='执行记录')),
                ('delete_count', models.CharField(blank=True, max_length=255, null=True, verbose_name='删除量')),
                ('sum_commit', models.IntegerField(default=0, verbose_name='总提交量')),
                ('sum_delete', models.IntegerField(default=0, verbose_name='总删除量')),
                ('database_status', models.CharField(default='', max_length=50, verbose_name='数据源状态')),
                ('extend1', models.CharField(blank=True, max_length=255, null=True, verbose_name='备用字段3')),
                ('extend2', models.CharField(blank=True, max_length=255, null=True, verbose_name='备用字段3')),
                ('extend3', models.CharField(blank=True, max_length=255, null=True, verbose_name='备用字段3')),
                ('rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='datamoving.Regulation', verbose_name='规则id')),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.AddField(
            model_name='log',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datamoving.Task', verbose_name='任务外键'),
        ),
    ]
